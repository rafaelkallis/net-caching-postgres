name: Build

on:
  push:
    branches: 
      - main
      - release/*
      - hotfix/*
  pull_request:
    branches:
      - main
      - release/*
      - hotfix/*

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

jobs:
  build:
    strategy:
      matrix: 
        postgres-version: [16, 15, 14, 13]
    
    runs-on: ubuntu-22.04
    
    services:
      postgres:
        image: postgres:${{ matrix.postgres-version }}
        env:
          POSTGRES_PASSWORD: pAssw0rd
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    steps:
    - uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        cache: true
        cache-dependency-path: '**/packages.lock.json'
    
    - name: Restore dependencies
      run: dotnet restore --locked-mode
    
    - name: Build
      run: >-
        dotnet build 
        --no-restore 
        --configuration Debug
    
    - name: Test
      run: >-
        dotnet test 
        --no-build 
        --configuration Debug 
        --verbosity normal
        
  release:
    needs: build
    runs-on: ubuntu-22.04
    if: >-
      github.event_name == 'push' && (
        startsWith(github.ref, 'refs/heads/release/') || 
        startsWith(github.ref, 'refs/heads/hotfix/')
      )
    environment: nuget.org

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v4
        with:
          cache: true
          cache-dependency-path: '**/packages.lock.json'

      - name: Pack
        run: >-
          dotnet pack
          --configuration Release
          --property:PackageOutputPath="$PWD/nupkgs"
          -p:ContinuousIntegrationBuild=true

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          path: nupkgs

      - name: Publish to nuget.org
        run: >-
          dotnet nuget push "*.nupkg"
          --api-key ${{ secrets.NUGET_ORG_API_KEY }} 
          --source https://api.nuget.org/v3/index.json
          --skip-duplicate
        working-directory: nupkgs
